---
import { Picture } from "astro:assets";
import Link from "../ui/link";
import Lightbox from "../ui/lightbox";
import type { CollectionEntry } from "astro:content";
import TechnologyBadge from "./TechnologyBadge";

interface Props {
  entry: CollectionEntry<"blog">;
  lang: "en" | "es" | "cat" | "de";
}

const { entry, lang } = Astro.props;
---

<div
  class="my-2 flex h-full w-full flex-col items-center justify-start gap-2 rounded-md border-2 border-zinc-100/20 p-2 dark:border-zinc-900/20"
>
  {
    entry.data.headerImage && (
      <div class="relative mx-auto h-[200px] w-full items-center justify-center overflow-hidden rounded-md transition-transform duration-200 ease-in-out hover:rotate-1 hover:scale-110">
        <Lightbox client:load dialogClass="tablet:w-fit">
          <Picture
            formats={["avif", "webp"]}
            src={entry.data.headerImage.src}
            alt={entry.data.headerImage.alt}
            width={500}
            height={1000}
            class="pointer-events-none rounded-md"
          />
        </Lightbox>
      </div>
    )
  }
  <div class="flex w-full flex-1 flex-col items-center justify-between py-2">
    <div class="flex flex-col items-center justify-center gap-1">
      <time class="text-sm" datetime={entry.data.date.toISOString()}>
        {
          entry.data.date.toLocaleDateString(undefined, {
            dateStyle: "medium",
            timeZone: "UTC",
          })
        }
      </time>
      <h3 class="text-2xl font-semibold">{entry.data.title}</h3>
    </div>
    <p class="w-3/4 text-center">{entry.data.description}</p>
    <Link
      client:load
      lang={lang}
      href={`/blog/${entry.slug.split("/")[1]}`}
      className="rounded-md p-2 text-xl uppercase"
    >
      Read
    </Link>
  </div>
</div>
